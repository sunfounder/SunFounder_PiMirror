#!/bin/bash

clear
echo -e "     ╔═════════════════════════════════════════════════╗"
echo -e "     ║                                                 ║"
echo -e "     ║    ╔════╗       ╔═══╗             ╔═╗           ║"
echo -e "     ║    ║╔═╗ ║       ║╔══╝             ║ ║           ║"
echo -e "     ║    ║╚═══╦╗╔═╦═══╣╚══╦═══╦╗╔═╦═══╦═╝ ╠═══╦══╗    ║"
echo -e "     ║    ╚══╗ ║║║ ║╔╗ ║╔══╣╔╗ ║║║ ║╔╗ ║╔╗ ║ ══╣╔═╝    ║"
echo -e "     ║    ║╚═╝ ║╚╝ ║║║ ║║  ║╚╝ ║╚╝ ║║║ ║╚╝ ║ ══╣║      ║"
echo -e "     ║    ╚════╩═══╩╝╚═╩╝  ╚═══╩═══╩╝╚═╩═══╩═══╩╝      ║"
echo -e "     ║                                                 ║"
echo -e "     ╚═════════════════════════════════════════════════╝"
echo -e ''
echo -e "               ╔════════════════════════════╗"
echo -e "               ║ Mirror installation script ║"
echo -e "               ╚════════════════════════════╝"
echo -e ''
sleep 2s

is_apt_get_updated='Not updated'
is_pip_installed='Not installed'
is_setuptools_installed='Not installed'
is_google_assistant_installed='Not installed'
is_google_auth_installed='Not installed'
is_feedparser_installed='Not installed'
is_imagetk_installed='Not installed'
is_samba_installed='Not installed'
is_google_auth='Not set'
is_samba_set='Not set'
is_audio_set='Not set'
is_autostart_set='Not set'
is_screensaver_disabled='Not installed'
is_screen_rotation_set='Not set'
is_weather_api_set='Not set'

# install google assistant
echo -e "!! Make sure you have finished creating Google project"
echo -e "and get the client_secrets_<client_id>.json downloaded"
read -p "under ~/Download, or the following might failed. Contiune? (Y/n) " confirm
if [ "$confirm" == "y" ] || [ "$confirm" == "Y" ]; then
    echo -e "OK! Move on."
else
    echo -e "OK! Bye~"
fi

sleep 1s
echo -e "Update apt-get list."
echo -e "┗━ sudo apt-get update"
if sudo apt-get update; then
    echo -e "   ┗━ Success"
    is_apt_get_updated='Success'
else
    echo -e "   ┗━ Failed"
    is_apt_get_updated='Failed'
fi
echo -e "Install google assistant."
echo -e "┗━ Install setuptools for python3 "
echo -e "   ┗━ sudo python3 -m pip install --upgrade pip"
if sudo python3 -m pip install --upgrade pip ; then
    echo -e "   ┗━ Success"
    is_pip_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_pip_installed='Failed'
fi
echo -e "   ┗━ sudo python3 -m pip install --upgrade setuptools"
if sudo python3 -m pip install --upgrade setuptools ; then
    echo -e "   ┗━ Success"
    is_setuptools_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_setuptools_installed='Failed'
fi
echo -e ''
echo -e "┗━ Install google-assistant-library"
echo -e "   ┗━ sudo python3 -m pip install --upgrade google-assistant-library"
if sudo python3 -m pip install --upgrade google-assistant-library ; then
    echo -e "   ┗━ Success"
    is_google_assistant_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_google_assistant_installed='Failed'
fi
echo -e ''
echo -e "┗━ Install authorization tool"
echo -e "   ┗━ sudo python3 -m pip install --upgrade google-auth-oauthlib[tool]"
if sudo python3 -m pip install --upgrade google-auth-oauthlib[tool] ; then
    echo -e "   ┗━ Success"
    is_google_auth_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_google_auth_installed='Failed'
fi

echo -e ''
echo -e "Install feedparser."
echo -e "┗━ sudo python3 -m pip install feedparser"
if sudo python3 -m pip install feedparser ; then
    echo -e "   ┗━ Success"
    is_feedparser_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_feedparser_installed='Failed'
fi

echo -e ''
echo -e "Install Install pil.imagetk."
echo -e "┗━ sudo apt-get install python3-pil.imagetk"
if sudo apt-get install python3-pil.imagetk -y ; then
    echo -e "   ┗━ Success"
    is_imagetk_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_imagetk_installed='Failed'
fi

samba_config="\
[PiMirror]\n\
    comment = For SunFounder PiMirror's screensavers and configs\n\
    path = /home/pi/SunFounder_PiMirror/samba_files/\n\
    browseable = yes\n\
    writeable = yes\n\
    public = yes\n\
    create mask = 0777\n\
    directory mask = 0777\n"
echo -e ''
echo -e "Install samba."
echo -e "┗━ sudo apt-get install samba"
if sudo apt-get install samba -y ; then
    echo -e "   ┗━ Success"
    is_samba_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_samba_installed='Failed'
fi

echo -e "┗━ Setup"
egrep -v "^#|^$" /etc/samba/smb.conf > smb.conf.temp  # pick up all uncomment configrations
if grep -q '[PiMirror]' smb.conf.temp; then  # whether Mirror in uncomment configrations or not
    echo -e '   ┗━ Seem samba is already set, skip'
    is_samba_set='Success'
else
    if echo -e $samba_config >> /etc/samba/smb.conf ; then
        echo -e "      ┗━ Success"
        is_samba_set='Success'
    else
        echo -e "      ┗━ Failed"
        is_samba_set='Failed'
    fi
fi
echo -e '   ┗━ cleanup'
sudo rm smb.conf.temp

echo -e ''
echo -e "Setup autostart"
if  sudo sed -i '/SunFounder_PiMirror/d' /home/pi/.config/lxsession/LXDE-pi/autostart && echo -e "\n@/home/pi/SunFounder_PiMirror/pimirror/pimirror" >> /home/pi/.config/lxsession/LXDE-pi/autostart ; then
    echo -e "   ┗━ Success"
    is_autostart_set='Success'
else
    echo -e "   ┗━ Failed"
    is_autostart_set='Failed'
fi

echo -e ''
echo -e "Disable screen blank"
if  sudo sed -i '/SunFounder_PiMirror/d' /home/pi/.config/lxsession/LXDE-pi/autostart && echo -e "\n@/home/pi/SunFounder_PiMirror/pimirror/pimirror" >> /home/pi/.config/lxsession/LXDE-pi/autostart ; then
    echo -e "   ┗━ Success"
    is_autostart_set='Success'
else
    echo -e "   ┗━ Failed"
    is_autostart_set='Failed'
fi

mic_speaker_config="\
pcm.!default {\n\
  type asym\n\
  capture.pcm \"mic\"\n\
  playback.pcm \"speaker\"\n\
}\n\
pcm.mic {\n\
  type plug\n\
  slave {\n\
    pcm \"hw:1,0\"\n\
  }\n\
}\n\
pcm.speaker {\n\
  type plug\n\
  slave {\n\
    pcm \"hw:0,1\"\n\
  }\n\
}"
echo -e ''
echo -e "Setup mic and speaker"
if sudo echo -e $mic_speaker_config > /home/pi/.asoundrc ; then
    echo -e "   ┗━ Success"
    is_audio_set='Success'
else
    echo -e "   ┗━ Failed"
    is_audio_set='Failed'
fi

echo -e ''
echo -e "Setup screen rotation"
if sudo sed -i '/display_rotate=/d' /boot/config.txt && sudo echo "display_rotate=1" >> /boot/config.txt ; then
    echo -e "   ┗━ Success"
    is_screen_rotation_set='Success'
else
    echo -e "   ┗━ Failed"
    is_screen_rotation_set='Failed'
fi

echo -e ''
echo -e "Authorize google account"
echo -e "┗━ Find client_secret json file"
echo -e "   ┗━ ls /home/pi/Downloads/ | grep "client_secret""
client_secret=`ls /home/pi/Downloads/ | grep "client_secret"`
if [ "$client_secret" == "" ] ; then
    echo -e "   ┗━ Failed"
    is_google_auth='Failed'
else
    echo -e "┗━ Authorize"
    echo -e "   ┗━ google-oauthlib-tool --client-secrets /home/pi/Downloads/$client_secret --scope https://www.googleapis.com/auth/assistant-sdk-prototype --save --headless"
    if sudo -u pi google-oauthlib-tool --client-secrets /home/pi/Downloads/$client_secret --scope https://www.googleapis.com/auth/assistant-sdk-prototype --save --headless ; then
        echo -e "   ┗━ Success"
        is_google_auth='Success'
    else
        echo -e "   ┗━ Failed"
        is_google_auth='Failed'
    fi
fi

echo -e ''
echo -e "Setup Weather API"
read -p "Enter Your Dark Sky Secret Key:" token
token="weather_api_token = "$token
if sudo sed -i "/\<weather_api_token/s/\<weather_api_token.*/$token/g" ./samba_files/config.txt ; then
    echo -e "   ┗━ Success"
    is_weather_api_set='Success'
else
    echo -e "   ┗━ Failed"
    is_weather_api_set='Failed'
fi

echo -e ''
echo -e ''
echo -e "Summery:"
echo -e "┗━ Basic:"
echo -e "   ┗━ Apt get update "$is_apt_get_updated
echo -e "┗━ Install:"
echo -e "   ┗━ Google Assistant Library   "$is_google_assistant_installed
echo -e "   ┗━ Google authorization tool  "$is_google_auth_installed
echo -e "   ┗━ pip          "$is_pip_installed
echo -e "   ┗━ setuptools   "$is_setuptools_installed
echo -e "   ┗━ feedparser   "$is_feedparser_installed
echo -e "   ┗━ imagetk      "$is_imagetk_installed
echo -e "   ┗━ samba        "$is_samba_installed
echo -e "┗━ Configuration:"
echo -e "   ┗━ Google authorization  "$is_google_auth
echo -e "   ┗━ samba                 "$is_samba_set
echo -e "   ┗━ audio                 "$is_audio_set
echo -e "   ┗━ autostart             "$is_autostart_set
echo -e "   ┗━ screensaver           "$is_screensaver_disabled
echo -e "   ┗━ Screen Rotation       "$is_screen_rotation_set
echo -e "   ┗━ Weather API           "$is_weather_api_set