#!/bin/bash

clear
echo -e "     ╔═════════════════════════════════════════════════╗"
echo -e "     ║                                                 ║"
echo -e "     ║    ╔════╗       ╔═══╗             ╔═╗           ║"
echo -e "     ║    ║╔═╗ ║       ║╔══╝             ║ ║           ║"
echo -e "     ║    ║╚═══╦╗╔═╦═══╣╚══╦═══╦╗╔═╦═══╦═╝ ╠═══╦══╗    ║"
echo -e "     ║    ╚══╗ ║║║ ║╔╗ ║╔══╣╔╗ ║║║ ║╔╗ ║╔╗ ║ ══╣╔═╝    ║"
echo -e "     ║    ║╚═╝ ║╚╝ ║║║ ║║  ║╚╝ ║╚╝ ║║║ ║╚╝ ║ ══╣║      ║"
echo -e "     ║    ╚════╩═══╩╝╚═╩╝  ╚═══╩═══╩╝╚═╩═══╩═══╩╝      ║"
echo -e "     ║                                                 ║"
echo -e "     ╚═════════════════════════════════════════════════╝"
echo -e ''
echo -e "               ╔════════════════════════════╗"
echo -e "               ║ Mirror installation script ║"
echo -e "               ╚════════════════════════════╝"
echo -e ''
sleep 2s

is_apt_get_updated='Skiped'
is_pip_installed='Skiped'
is_setuptools_installed='Skiped'
is_google_assistant_installed='Skiped'
is_google_auth_installed='Skiped'
is_feedparser_installed='Skiped'
is_imagetk_installed='Skiped'
is_samba_installed='Skiped'
is_google_auth='Skiped'
is_samba_set='Skiped'
is_samba_permission_granded='Skiped'
is_audio_set='Skiped'
is_autostart_set='Skiped'
is_screen_rotation_set='Skiped'
is_weather_api_set='Skiped'

echo -e "Setup google account"
echo -e "    1. Go to the Google Projects page, right click on this link https://console.cloud.google.com/project, Copy URL, and paste it on the browser. Login your Google account or create one. Then, create a new project."
read -p "    When you are done, come back here and hit enter to continue."
echo -e ""
echo -e '    2. Go to Google API console, right click on this link https://console.developers.google.com/apis/api/embeddedassistant.googleapis.com/overview and selected project you just created. Click Library, search "assistant", click the bottom Google Assistant API, and click Enable.'
read -p "    When you are done, come back here and hit enter to continue."
echo -e ""
echo -e '    3. Create an OAuth Client ID with the following steps'
echo -e '      a. click Credentials tab. Or click this to go to Google API Credentials https://console.developers.google.com/apis/credentials/oauthclient'
echo -e '      b. You may need to set a product name for the product consent screen. On the OAuth consent screen tab, give the product a name and click Save.'
echo -e '      c. Back to Credentials, click Create credentials, choose OAuth client ID'
echo -e '      c. Click Other and give the client ID a name.'
echo -e '      d. Click Create. A dialog box appears that shows you a client ID and secret. (No need to remember or save this, just close the dialog.)'
echo -e '      e. Click the download icon (at the far right of screen) for the client ID to download the client secret JSON file (client_secret_<client-id>.json).'
read -p "    When you are done, come back here and hit enter to continue."
echo -e ""
echo -e '    4. After downloaded, the client_secret_<client-id>.json may be under ~/Downloads. '
echo -e '      a. Open File Manager, go to Downloads folder.'
echo -e '      b. Check if there is one file named `client_secret_<...>.json`.'
read -p "    When you are done, come back here and hit enter to continue."
echo -e ""

echo -e "Setup Dark Sky free weather api tocken"
echo -e '    1. Go to Dark Sky API: https://darksky.net/dev/'
echo -e '    2. LOG IN or SIGN UP, you will need to verified your account by email. When its done, Log in again'
echo -e "    3. After you loged in, you can see Your Secret Key immediately. don't close the webpage, you will need it later."
read -p "    When you are done, come back here and hit enter to continue."

sleep 1s

echo -e ""
echo -e ""
echo -e "Update apt-get list."
echo -e "┗━ sudo apt-get update"
if sudo apt-get update ; then
    echo -e "   ┗━ Success"
    is_apt_get_updated='Success'
else
    echo -e "   ┗━ Failed"
    is_apt_get_updated='Failed'
fi

# install google assistant
echo -e "Install google assistant."
echo -e "┗━ Install setuptools for python3 "
echo -e "   ┗━ sudo python3 -m pip install --upgrade pip"
if sudo python3 -m pip install --upgrade pip ; then
    echo -e "   ┗━ Success"
    is_pip_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_pip_installed='Failed'
fi
echo -e "   ┗━ sudo python3 -m pip install --upgrade setuptools"
if sudo python3 -m pip install --upgrade setuptools ; then
    echo -e "   ┗━ Success"
    is_setuptools_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_setuptools_installed='Failed'
fi
echo -e ''
echo -e "┗━ Install google-assistant-library"
echo -e "   ┗━ sudo python3 -m pip install --upgrade google-assistant-library"
if sudo python3 -m pip install --upgrade google-assistant-library ; then
    echo -e "   ┗━ Success"
    is_google_assistant_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_google_assistant_installed='Failed'
fi
echo -e ''
echo -e "┗━ Install authorization tool"
echo -e "   ┗━ sudo python3 -m pip install --upgrade google-auth-oauthlib[tool]"
if sudo python3 -m pip install --upgrade google-auth-oauthlib[tool] ; then
    echo -e "   ┗━ Success"
    is_google_auth_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_google_auth_installed='Failed'
fi

echo -e ''
echo -e "Install feedparser."
echo -e "┗━ sudo python3 -m pip install feedparser"
if sudo python3 -m pip install feedparser ; then
    echo -e "   ┗━ Success"
    is_feedparser_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_feedparser_installed='Failed'
fi

echo -e ''
echo -e "Install Install pil.imagetk."
echo -e "┗━ sudo apt-get install python3-pil.imagetk"
if sudo apt-get install python3-pil.imagetk -y ; then
    echo -e "   ┗━ Success"
    is_imagetk_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_imagetk_installed='Failed'
fi

samba_config="\
[PiMirror]\n\
    comment = For SunFounder PiMirror's screensavers and configs\n\
    path = /home/pi/SunFounder_PiMirror/samba_files/\n\
    browseable = yes\n\
    writeable = yes\n\
    public = yes\n\
    create mask = 0777\n\
    directory mask = 0777\n"
echo -e ''
echo -e "Install samba."
echo -e "┗━ sudo apt-get install samba"
if sudo apt-get install samba -y ; then
    echo -e "   ┗━ Success"
    is_samba_installed='Success'
else
    echo -e "   ┗━ Failed"
    is_samba_installed='Failed'
fi

echo -e "┗━ Setup"
egrep -v "^#|^$" /etc/samba/smb.conf > smb.conf.temp  # pick up all uncomment configrations
if grep -q 'PiMirror' smb.conf.temp ; then  # whether Mirror in uncomment configrations or not
    echo -e '   ┗━ Seem samba is already set, skip'
    is_samba_set='Success'
else
    if echo -e $samba_config >> /etc/samba/smb.conf ; then
        echo -e "      ┗━ Success"
        is_samba_set='Success'
    else
        echo -e "      ┗━ Failed"
        is_samba_set='Failed'
    fi
fi
echo -e '   ┗━ cleanup'
sudo rm smb.conf.temp

echo -e "Give samba folder permission."
echo -e "┗━ sudo chmod -R 777 /home/pi/SunFounder_PiMirror/samba_files/"
if sudo chmod -R 777 /home/pi/SunFounder_PiMirror/samba_files/ ; then
    echo -e "   ┗━ Success"
    is_samba_permission_granded='Success'
else
    echo -e "   ┗━ Failed"
    is_samba_permission_granded='Failed'
fi

echo -e ''
echo -e "Setup autostart"
if  sudo sed -i '/SunFounder_PiMirror/d' /home/pi/.config/lxsession/LXDE-pi/autostart && echo -e "\n@/home/pi/SunFounder_PiMirror/pimirror/pimirror" >> /home/pi/.config/lxsession/LXDE-pi/autostart ; then
    echo -e "   ┗━ Success"
    is_autostart_set='Success'
else
    echo -e "   ┗━ Failed"
    is_autostart_set='Failed'
fi

mic_speaker_config="\
pcm.!default {\n\
  type asym\n\
  capture.pcm \"mic\"\n\
  playback.pcm \"speaker\"\n\
}\n\
pcm.mic {\n\
  type plug\n\
  slave {\n\
    pcm \"hw:1,0\"\n\
  }\n\
}\n\
pcm.speaker {\n\
  type plug\n\
  slave {\n\
    pcm \"hw:0,1\"\n\
  }\n\
}"
echo -e ''
echo -e "Setup mic and speaker"
if sudo echo -e $mic_speaker_config > /home/pi/.asoundrc ; then
    echo -e "   ┗━ Success"
    is_audio_set='Success'
else
    echo -e "   ┗━ Failed"
    is_audio_set='Failed'
fi

echo -e ''
echo -e "Setup screen rotation"
if sudo sed -i '/display_rotate=/d' /boot/config.txt && sudo echo "display_rotate=1" >> /boot/config.txt ; then
    echo -e "   ┗━ Success"
    is_screen_rotation_set='Success'
else
    echo -e "   ┗━ Failed"
    is_screen_rotation_set='Failed'
fi

echo -e ''
echo -e "Authorize google account"
echo -e "┗━ Check if authorized"
echo -e "   ┗━ ls /home/pi/.config/google-oauthlib-tool/credentials.json"
if ls /home/pi/.config/google-oauthlib-tool/credentials.json ; then
    echo -e '   ┗━ Seem google account is already authorize, skip'
    is_google_auth='Success'
else
    echo -e "┗━ Find client_secret json file"
    echo -e "   ┗━ ls /home/pi/Downloads/ | grep 'client_secret'"
    client_secret=`ls /home/pi/Downloads/ | grep "client_secret"`
    if [ "$client_secret" == "" ] ; then
        echo -e "   ┗━ Failed"
        is_google_auth='Failed'
    else
        echo -e "┗━ Authorize"
        echo -e "   ┗━ google-oauthlib-tool --client-secrets /home/pi/Downloads/$client_secret --scope https://www.googleapis.com/auth/assistant-sdk-prototype --save --headless"
        if sudo -u pi google-oauthlib-tool --client-secrets /home/pi/Downloads/$client_secret --scope https://www.googleapis.com/auth/assistant-sdk-prototype --save --headless ; then
            echo -e "   ┗━ Success"
            is_google_auth='Success'
        else
            echo -e "   ┗━ Failed"
            is_google_auth='Failed'
        fi
    fi
fi

echo -e ''
echo -e "Setup Weather API"
if grep -q "weather_api_token" /home/pi/SunFounder_PiMirror/samba_files/config.txt ; then
    echo -e '   ┗━ Seem Weather API is already set, skip'
    is_weather_api_set='Success'
else
    read -p "Enter Your Dark Sky Secret Key:" token
    if [ "$token" == "" ] ; then
        echo -e "   ┗━ Skip"
        is_weather_api_set='Skiped'
    else
        token="weather_api_token = "$token
        if sudo echo $token >> /home/pi/SunFounder_PiMirror/samba_files/config.txt ; then
            echo -e "   ┗━ Success"
            is_weather_api_set='Success'
        else
            echo -e "   ┗━ Failed"
            is_weather_api_set='Failed'
        fi
    fi
fi

echo -e ''
echo -e ''
echo -e "Summery:"
echo -e "┗━ Basic:"
echo -e "   ┗━ Apt get update "$is_apt_get_updated
echo -e "┗━ Install:"
echo -e "   ┗━ Google Assistant Library   "$is_google_assistant_installed
echo -e "   ┗━ Google authorization tool  "$is_google_auth_installed
echo -e "   ┗━ pip          "$is_pip_installed
echo -e "   ┗━ setuptools   "$is_setuptools_installed
echo -e "   ┗━ feedparser   "$is_feedparser_installed
echo -e "   ┗━ imagetk      "$is_imagetk_installed
echo -e "   ┗━ samba        "$is_samba_installed
echo -e "┗━ Configuration:"
echo -e "   ┗━ Google authorization    "$is_google_auth
echo -e "   ┗━ samba folder permission "$is_samba_set
echo -e "   ┗━ samba                   "$is_samba_set
echo -e "   ┗━ audio                   "$is_audio_set
echo -e "   ┗━ autostart               "$is_autostart_set
echo -e "   ┗━ Screen Rotation         "$is_screen_rotation_set
echo -e "   ┗━ Weather API             "$is_weather_api_set